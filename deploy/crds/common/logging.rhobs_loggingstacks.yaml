---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: loggingstacks.logging.rhobs
spec:
  group: logging.rhobs
  names:
    kind: LoggingStack
    listKind: LoggingStackList
    plural: loggingstacks
    singular: loggingstack
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LoggingStack is the Schema for the loggingstacks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LoggingStackSpec is the specification for desired Logging
              Stack
            properties:
              forwarder:
                properties:
                  withAuditLogs:
                    type: boolean
                type: object
              monitoringSelector:
                additionalProperties:
                  type: string
                type: object
              storage:
                properties:
                  size:
                    description: Size defines one of the support Loki deployment scale
                      out sizes.
                    enum:
                    - 1x.demo
                    - 1x.extra-small
                    - 1x.small
                    - 1x.medium
                    type: string
                  storage:
                    description: Storage defines the spec for the object storage endpoint
                      to store logs.
                    properties:
                      schemas:
                        default:
                        - effectiveDate: "2020-10-11"
                          version: v11
                        description: Schemas for reading and writing logs.
                        items:
                          description: ObjectStorageSchema defines the requirements
                            needed to configure a new storage schema.
                          properties:
                            effectiveDate:
                              description: EffectiveDate is the date in UTC that the
                                schema will be applied on. To ensure readibility of
                                logs, this date should be before the current date
                                in UTC.
                              pattern: ^([0-9]{4,})([-]([0-9]{2})){2}$
                              type: string
                            version:
                              description: Version for writing and reading logs.
                              enum:
                              - v11
                              - v12
                              - v13
                              type: string
                          required:
                          - effectiveDate
                          - version
                          type: object
                        minItems: 1
                        type: array
                      secret:
                        description: Secret for object storage authentication. Name
                          of a secret in the same namespace as the LokiStack custom
                          resource.
                        properties:
                          name:
                            description: Name of a secret in the namespace configured
                              for object storage secrets.
                            type: string
                          type:
                            description: Type of object storage that should be used
                            enum:
                            - azure
                            - gcs
                            - s3
                            - swift
                            - alibabacloud
                            type: string
                        required:
                        - name
                        - type
                        type: object
                      tls:
                        description: TLS configuration for reaching the object storage
                          endpoint.
                        properties:
                          caKey:
                            description: Key is the data key of a ConfigMap containing
                              a CA certificate. It needs to be in the same namespace
                              as the LokiStack custom resource. If empty, it defaults
                              to "service-ca.crt".
                            type: string
                          caName:
                            description: CA is the name of a ConfigMap containing
                              a CA certificate. It needs to be in the same namespace
                              as the LokiStack custom resource.
                            type: string
                        required:
                        - caName
                        type: object
                    required:
                    - secret
                    type: object
                required:
                - size
                - storage
                type: object
              subscription:
                properties:
                  catalogSource:
                    default: redhat-operators
                    type: string
                  catalogSourceNamespace:
                    default: openshift-marketplace
                    type: string
                  channel:
                    type: string
                  installPlanApproval:
                    description: Approval is the user approval policy for an InstallPlan.
                      It must be one of "Automatic" or "Manual".
                    type: string
                required:
                - catalogSource
                - catalogSourceNamespace
                - channel
                - installPlanApproval
                type: object
            required:
            - storage
            - subscription
            type: object
          status:
            description: LoggingStackStatus defines the observed state of LoggingStack.
              It should always be reconstructable from the state of the cluster and/or
              outside world.
            properties:
              conditions:
                description: Conditions provide status information about the LoggingStack
                items:
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      - Degraded
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
